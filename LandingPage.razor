@inject ProductContext productcontext
<MudThemeProvider IsDarkMode="true" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudMainContent Class="pt-0">
        <MudTabs Elevation="4" Rounded="true" Centered="true" Color="@Color.Primary">
            <MudTabPanel Text="Intro">
                <WpfApp1.RazorFiles.Intro/>
            </MudTabPanel>
            <MudTabPanel Text="Show Data" Disabled="!showdata">
                @if (showdata)
                {
                    @if (productcontext.Products.Any())
                    {
                        @foreach (var item in productcontext.Categories)
                        {
                            <MudCard>
                                <MudCardContent>
                                    <MudText>@item.Name</MudText>
                                    @foreach (var SubItem in item.Products)
                                    {
                                        <MudText Typo="Typo.body2">@SubItem.Name</MudText>
                                    }
                                </MudCardContent>
                            </MudCard>
                        }
                    }
                }
            </MudTabPanel>
            <MudTabPanel Text="New Product">
                <WpfApp1.RazorFiles.Product />
            </MudTabPanel>
            <MudTabPanel Text="New Category" Disabled="!showdata">
                <WpfApp1.RazorFiles.Category />
            </MudTabPanel>
            <MudTabPanel Text="Sales" Disabled="!showdata">
      <WpfApp1.RazorFiles.SalesGraph/>
            </MudTabPanel>         
            <MudTabPanel Text="Other" Disabled="!showdata">
                <button class="btn btn-primary" @onclick="AddRandom">Click me</button>
            </MudTabPanel>  
            <MudTabPanel Text="Loader" Disabled="!showdata">
<WpfApp1.RazorFiles.Loader/>
            </MudTabPanel>
        </MudTabs>
    </MudMainContent>
</MudLayout>
@code {
    private int currentCount = 0;
    bool showdata;

    protected override async Task OnInitializedAsync()
    {
        await productcontext.Database.EnsureCreatedAsync();

        await AddRandom();
        showdata = true;
    }

    async Task AddRandom()
    {
        productcontext.Attach(new Product { Name = "Name", Category = new Category { Name = "cat name" } });
        await productcontext.SaveChangesAsync();
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}